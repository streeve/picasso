pipeline {
    options {
        disableConcurrentBuilds(abortPrevious: true)
        timeout(time: 3, unit: 'HOURS')
    }
    triggers {
        issueCommentTrigger('.*test this please.*')
    }
    agent none

    stages {
        stage('Build') {
            parallel {
                stage('CUDA-11-NVCC-DEBUG') {
                    agent {
                        dockerfile {
                            filename 'Dockerfile'
                            dir 'docker'
                            additionalBuildArgs '--build-arg BASE=nvidia/cuda:11.0.3-devel-ubuntu20.04'
                            label 'nvidia-docker && volta'
                            args '--env NVIDIA_VISIBLE_DEVICES=$NVIDIA_VISIBLE_DEVICES'
                        }
                    }
                    steps {
                        sh '''
                            rm -rf build && mkdir -p build && cd build && \
                            cmake \
                              -D CMAKE_BUILD_TYPE=Debug \
                              -D CMAKE_CXX_COMPILER=$KOKKOS_DIR/bin/nvcc_wrapper \
                              -D CMAKE_CXX_FLAGS="-Wall -Wextra -Wpedantic" \
                              -D CMAKE_PREFIX_PATH="$JSON_DIR;$KOKKOS_DIR;$CABANA_DIR;$ARBORX_DIR;$SILO_DIR" \
                              -D MPIEXEC_MAX_NUMPROCS=1 \
                              -D MPIEXEC_PREFLAGS="--allow-run-as-root;--mca;btl_smcuda_use_cuda_ipc;0" \
			                  -D Picasso_ENABLE_TESTING=ON \
                            .. && \
                            make -j${NPROCS} && \
                            ctest --output-on-failure
                        '''
                    }
                }
                stage('ROCM-4.5-HIPCC-DEBUG') {
                    agent {
                        dockerfile {
                            filename 'Dockerfile.hipcc'
                            dir 'docker'
                            additionalBuildArgs '--build-arg BASE=rocm/dev-ubuntu-20.04:4.5'
                            args '-v /tmp/ccache.kokkos:/tmp/ccache --device=/dev/kfd --device=/dev/dri --security-opt seccomp=unconfined --group-add video --env HIP_VISIBLE_DEVICES=$HIP_VISIBLE_DEVICES'
                            label 'rocm-docker && vega && AMD_Radeon_Instinct_MI60'
                        }
                    }
                    steps {
                        sh '''
                            rm -rf build && mkdir -p build && cd build && \
                            cmake \
                              -D CMAKE_BUILD_TYPE=Debug \
                              -D CMAKE_CXX_COMPILER=hipcc \
                              -D CMAKE_CXX_FLAGS="-Wall -Wextra -Wpedantic" \
                              -D CMAKE_PREFIX_PATH="$JSON_DIR;$KOKKOS_DIR;$CABANA_DIR;$ARBORX_DIR" \
                              -D MPIEXEC_MAX_NUMPROCS=1 \
                              -D MPIEXEC_PREFLAGS="--allow-run-as-root" \
                              -D Picasso_ENABLE_TESTING=ON \
                            .. && \
                            make -j${NPROCS} && \
                            ctest --output-on-failure
                        '''
                    }
                }
            }
        }
    }
}
